- arguments:
  - -XHaskell2010

  # GHC2021
  - -XBangPatterns
  - -XBinaryLiterals
  - -XConstrainedClassMethods
  - -XConstraintKinds
  - -XDeriveDataTypeable
  - -XDeriveFoldable
  - -XDeriveFunctor
  - -XDeriveGeneric
  - -XDeriveLift
  - -XDeriveTraversable
  - -XEmptyCase
  - -XEmptyDataDeriving
  - -XExistentialQuantification
  - -XExplicitForAll
  - -XFlexibleContexts
  - -XFlexibleInstances
  - -XGADTSyntax
  - -XGeneralizedNewtypeDeriving
  - -XHexFloatLiterals
  - -XImportQualifiedPost
  - -XInstanceSigs
  - -XKindSignatures
  - -XMultiParamTypeClasses
  - -XNamedFieldPuns
  - -XNamedWildCards
  - -XNumericUnderscores
  - -XPolyKinds
  - -XPostfixOperators
  - -XRankNTypes
  - -XScopedTypeVariables
  - -XStandaloneDeriving
  - -XStandaloneKindSignatures
  - -XTupleSections
  - -XTypeApplications
  - -XTypeOperators
  - -XTypeSynonymInstances

  # Syntax
  - -XApplicativeDo

  # Records
  - -XDuplicateRecordFields

  # Literals
  - -XOverloadedStrings

  # Bindings and generalisation
  - -XMonoLocalBinds

# Overrides
- suggest: {name: Redundant do}
- warn: {name: Use explicit module export list}
- warn: {name: Use module export list}
- ignore: {name: Use tuple-section}
- ignore: {name: Use const}
- ignore: {name: Use curry}
- ignore: {name: Use uncurry}
- group: {name: generalise-for-conciseness, enabled: true}
- group: {name: extra, enabled: true}
- group: {name: teaching, enabled: true}

# Custom hints
- warn: {lhs: (>>), rhs: (*>)}
- warn: {lhs: return, rhs: pure}
- warn: {lhs: mapM, rhs: traverse}
- warn: {lhs: mapM_, rhs: traverse_}
- warn: {lhs: forM, rhs: for}
- warn: {lhs: forM_, rhs: for_}
- warn: {lhs: sequence, rhs: sequenceA}
- warn: {lhs: sequence_, rhs: sequenceA_}
- warn: {lhs: foldM, rhs: foldlM}
- warn: {lhs: liftM, rhs: liftA}
- warn: {lhs: liftM2, rhs: liftA2}
- warn: {lhs: liftM3, rhs: liftA3}
- warn: {lhs: ap, rhs: (<*>)}
